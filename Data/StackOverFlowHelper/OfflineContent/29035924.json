{"has_more":false,"items":[{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"comment_count":7,"score":1,"accepted_answer_id":29035998,"comments":[{"owner":{"profile_image":"https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG","display_name":"greenapps"},"score":1,"comment_id":46317099,"body":"It is time you post the relevant lines from the logcat. It tells you also which statement causes the exception."},{"owner":{"profile_image":"https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG","display_name":"greenapps"},"score":1,"comment_id":46317192,"body":"You should remove the BufferedReader from onPostExecute. And hence the readLine(). Do that in doInBackground. Also the webs.close is network code which does not belong in onPostExecute."},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46317419,"body":"I seem to be having problems with the <b>String clientraw = reader.readLine();<\/b>  So do I put webs.close and BufferReader in the doInBackgroud() and the <b>String clientraw = reader.readLine();<\/b> ?"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46317813,"body":"I moved all <b>BufferReader<\/b> and <b>readLine()<\/b> and <b>webs.close()<\/b> to doInBackground and it works. I&#39;m so happy. One whole day wasted but glad I resolved it and most important I learnt from this."},{"owner":{"profile_image":"https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG","display_name":"greenapps"},"score":1,"comment_id":46317815,"body":"All should go to doInBackGround. That all is network code so that&#39;s why."},{"owner":{"profile_image":"https://www.gravatar.com/avatar/38a04d0ccf9b761c9373ec9905ca7e92?s=128&d=identicon&r=PG","display_name":"greenapps"},"score":1,"comment_id":46317892,"body":"<code>glad I resolved it <\/code>. Be glad and realize your self that others solved it for you."},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46317996,"body":"Yes that <i>is<\/i> what I meant in a retrospective kind of way, &quot;them magical peoples on stackoverflow, thems help me fixes it&quot; ;-)"}],"answers":[{"owner":{"profile_image":"https://i.stack.imgur.com/shkBF.png?s=128&g=1","display_name":"Blackbelt"},"comment_count":11,"score":3,"is_accepted":true,"comments":[{"owner":{"profile_image":"https://i.stack.imgur.com/lvXft.jpg?s=128&g=1","display_name":"codeMagic"},"score":0,"comment_id":46312791,"body":"See, orb, why I don&#39;t like <code>runOnUiThread<\/code> in <code>AsyncTask<\/code>. It just complicates things when there&#39;s already methods for that."},{"owner":{"profile_image":"https://i.stack.imgur.com/shkBF.png?s=128&g=1","display_name":"Blackbelt"},"score":0,"comment_id":46312836,"body":"orb you are right... I don&#39;t like AsyncTask either, but as I said, if one knows what is doing those kind of things rarely happen, @codeMagic"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46313464,"body":"@codeMagic can you show me or point me to these methods that already do that? I am new to Android and Java for that matter should I do it in the <b>onPostExecute(Result)<\/b> method?"},{"owner":{"profile_image":"https://i.stack.imgur.com/lvXft.jpg?s=128&g=1","display_name":"codeMagic"},"score":0,"comment_id":46313786,"body":"@Dino all methods <b>except<\/b> <code>doInBackground()<\/code>. So, if you are updating before the task is done (ex. update a <code>ProgressBar<\/code>) you could use <code>onPreExecute()<\/code> if you want to update UI after task finishes then you would use <code>onPostExecute()<\/code>"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46314105,"body":"I actually didn&#39;t know that. I shall move it to onPostExecute()"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46314294,"body":"@Blackbelt but won&#39;t I get an error if the AsyncTask goes to the background to get the file and then the UI thread will want to update the UI and it won&#39;t have the details because it hasn&#39;t finished? I thought the AsyncTask ran separately to the UI thread?"},{"owner":{"profile_image":"https://i.stack.imgur.com/shkBF.png?s=128&g=1","display_name":"Blackbelt"},"score":0,"comment_id":46314346,"body":"onPostExecuted runs on the UI Thread and runs always after doInBackground returns"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46314839,"body":"What about the <b>String clientraw = reader.readLine();<\/b> part?"},{"owner":{"profile_image":"https://i.stack.imgur.com/shkBF.png?s=128&g=1","display_name":"Blackbelt"},"score":1,"comment_id":46314876,"body":"that goes in doInBackground. the reader object is reading from the network"},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6b70ae38cd243598c4e7bdcfe4b60ba8?s=128&d=identicon&r=PG","display_name":"Dino"},"score":0,"comment_id":46315605,"body":"It is still giving me the same error, I will update my question to show you want I have changed."},{"owner":{"profile_image":"https://i.stack.imgur.com/shkBF.png?s=128&g=1","display_name":"Blackbelt"},"score":1,"comment_id":46317150,"body":"<i>String clientraw = reader.readLine();<\/i> goes in <code>doInBackground<\/code>"}],"body":"<p>What is causing the <code>NetworkOnMainThreadException<\/code> is the following line<\/p>\n\n<pre><code> String clientraw = reader.readLine();\n<\/code><\/pre>\n\n<p>reading from a Stream obtained from a http call, is still a blocking operation and it has to be performed on a background thread<\/p>\n","answer_id":29035998}],"last_activity_date":1426267513,"answer_count":1,"title":"NetworkOnMainThreadException when I change HTTP to HTTPS in AsyncTask or Thread","body":"<p>I am stuck at this problem. The user inputs their website. It is either http or https, but when they input a https website I get a NetworkOnMainThreadExecption below is my AsyncTask. What am I doing wrong? If I remove the runOnUiThread I get a <strong>Only the original thread that created a view hierarchy can touch its views<\/strong> error which I think means that any updated to the UI need to be done in a Thread? So when I put the updates in the Thread I get <strong>NetworkOnMainThreadExecption<\/strong> error. <\/p>\n\n<pre><code>private class runBabyRun extends AsyncTask&lt;Void, Integer, String&gt; {\n\n\n    final TextView temperature = (TextView) findViewById(R.id.mTemp4);\n    // a few more TextViews here\n\n    @Override\n    protected String doInBackground(Void... params) {\n        try {\n            if (httpSelection.equals(\"http://\")) {\n                HttpClient httpClient = new DefaultHttpClient();\n                // get url data\n                HttpPost httppost = new HttpPost(weburi);\n                HttpResponse response = httpClient.execute(httppost);\n                HttpEntity entity = response.getEntity();\n                webs = entity.getContent();\n            }\n            if (httpSelection.equals(\"https://\")) {\n                Log.e(\"log_tag\", \"Entered https if statement \");\n                HostnameVerifier hostnameVerifier = org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n\n                DefaultHttpClient client = new DefaultHttpClient();\n\n                SchemeRegistry registry = new SchemeRegistry();\n                SSLSocketFactory socketFactory = SSLSocketFactory.getSocketFactory();\n                socketFactory.setHostnameVerifier((X509HostnameVerifier) hostnameVerifier);\n                registry.register(new Scheme(\"https\", socketFactory, 443));\n                SingleClientConnManager mgr = new SingleClientConnManager(client.getParams(), registry);\n                DefaultHttpClient httpClient = new DefaultHttpClient(mgr, client.getParams());\n\n                // Set verifier\n                HttpsURLConnection.setDefaultHostnameVerifier(hostnameVerifier);\n                // get url data\n                HttpPost httpPost = new HttpPost(weburi);\n                HttpResponse response = httpClient.execute(httpPost);\n                HttpEntity entity = response.getEntity();\n                webs = entity.getContent();\n            }\n            // convert response to string\n            try {\n                final BufferedReader reader = new BufferedReader(\n                        new InputStreamReader(webs, \"iso-8859-1\"),\n                        8);\n                // read one line of code, file is one whole string.\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        try {\n                            //split file into array using space as delimiter\n                            String clientraw = reader.readLine();\n                            String[] parts = clientraw.split(\" \");\n                               clientRawData.addAll(Arrays.asList(parts));\n                            //A few more setting up of fields here\n                            // Get Weather Station Title\n                            getSupportActionBar().setTitle(name(parts[32]));\n\n                            temperature.setText(parts[4] + degrees);\n\n                            time.setText(parts[29] + \":\" + parts[30]);\n                            date.setText(parts[74]);\n\n                            webs.close();\n\n                        } catch (Exception e) {\n                            Log.e(\"log_tag\", \"Error in displaying textview \" + e.toString());\n                            e.printStackTrace();\n                        }\n                    }\n\n\n\n                });\n\n            } catch (Exception e) {\n                Log.e(\"log_tag\", \"Error converting string \" + e.toString());\n            }\n        } catch (Exception e) {\n            Log.e(\"log_tag\", \"Error in http connection \" + e.toString());\n\n            Toast.makeText(getApplicationContext(), \"Error in Connection, please check your URL - \" + weburi, Toast.LENGTH_LONG).show();\n            // setup intent for Settings\n            Intent intent = new Intent(MainActivity.this, Setting.class);\n            // Launch the Settings Activity using the intent for result\n            startActivityForResult(intent, UPDATE_WEBURL);\n        }\n        return null;\n    }\n<\/code><\/pre>\n\n<p><strong>EDIT AFTER COMMENTS BELOW<\/strong>\nI have updated my app t have the onPostExecute and it looks like code below but I still get the NetworkOnMainThreadExeption error:\n <strong>E/log_tag﹕ Error in displaying textview android.os.NetworkOnMainThreadException<\/strong><\/p>\n\n<pre><code>    @Override\n    protected void onPostExecute(String s) {\n        super.onPostExecute(s);\n        // convert response to string\n        try {\n            final BufferedReader reader = new BufferedReader(\n                    new InputStreamReader(webs, \"iso-8859-1\"),\n                    8);\n            // read one line of code, file is one whole string.\n            try {\n                //split file into array using space as delimiter\n                String clientraw = reader.readLine();\n                String[] parts = clientraw.split(\" \");\n\n                // Get Weather Station Title\n                getSupportActionBar().setTitle(name(parts[32]));\n                temperature.setText(parts[4] + degrees);\n                //and various other setTexts\n                windDirection.setText(convertDegrees(parts[3]) + \" \" + \"(\" + (parts[3]) + \"\\u00b0\" + \")\");\n                time.setText(parts[29] + \":\" + parts[30]);\n                date.setText(parts[74]);\n\n                webs.close();\n\n            } catch (Exception e) {\n                Log.e(\"log_tag\", \"Error in displaying textview \" + e.toString());\n                e.printStackTrace();\n            }\n        } catch (Exception e) {\n            Log.e(\"log_tag\", \"Error converting string \" + e.toString());\n        }\n    }\n<\/code><\/pre>\n\n<p>The error log I get is:<\/p>\n\n<pre><code>03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish E/log_tag﹕ Error in displaying textview android.os.NetworkOnMainThreadException\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ android.os.NetworkOnMainThreadException\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1147)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:657)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:103)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at org.apache.http.impl.io.AbstractSessionInputBuffer.read(AbstractSessionInputBuffer.java:134)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at org.apache.http.impl.io.ContentLengthInputStream.read(ContentLengthInputStream.java:174)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at org.apache.http.conn.EofSensorInputStream.read(EofSensorInputStream.java:159)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at java.io.InputStreamReader.read(InputStreamReader.java:231)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at java.io.BufferedReader.fillBuf(BufferedReader.java:145)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at java.io.BufferedReader.readLine(BufferedReader.java:397)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at uk.co.diong.weatherlive_ish.MainActivity$runBabyRun.onPostExecute(MainActivity.java:307)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at uk.co.diong.weatherlive_ish.MainActivity$runBabyRun.onPostExecute(MainActivity.java:227)\n03-13 01:39:18.984    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.AsyncTask.finish(AsyncTask.java:632)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.AsyncTask.access$600(AsyncTask.java:177)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.Handler.dispatchMessage(Handler.java:102)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.os.Looper.loop(Looper.java:135)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at android.app.ActivityThread.main(ActivityThread.java:5221)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at java.lang.reflect.Method.invoke(Native Method)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at java.lang.reflect.Method.invoke(Method.java:372)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)\n03-13 01:39:18.997    5299-5299/uk.co.diong.weatherlive_ish W/System.err﹕ at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)\n<\/code><\/pre>\n","question_id":29035924,"tags":["android","multithreading","android-asynctask"]}]}